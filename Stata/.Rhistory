# Load meps data from SAS transport files
FYC <- read.xport('C:/MEPS/h171.ssp')
if(year <= 2001) FYC <- FYC %>% rename(VARPSU = VARPSU14,VARSTR=VARSTR14)
if(year <= 1998) FYC <- FYC %>% rename(PERWT14F = WTDPER14)
# Define survey design
meps <- FYC %>% mutate(ind = 1)
mepsdsgn <- svydesign(
id = ~VARPSU,
strata = ~VARSTR,
weights = ~PERWT14F,
data = meps,
nest = TRUE)
# Run analysis
svytotal(~(TOTEXP14>0), design = mepsdsgn)
package_names <- c('survey','dplyr','foreign')
lapply(package_names, function(x) if(!x %in% installed.packages()) install.packages(x))
lapply(package_names, require, character.only=T)
options(survey.lonely.psu='adjust')
options(digits = 10)
year = 2014
# Load meps data from SAS transport files
FYC <- read.xport('C:/MEPS/h171.ssp')
if(year <= 2001) FYC <- FYC %>% rename(VARPSU = VARPSU14,VARSTR=VARSTR14)
if(year <= 1998) FYC <- FYC %>% rename(PERWT14F = WTDPER14)
# Define survey design
meps <- FYC %>% mutate(ind = 1)
mepsdsgn <- svydesign(
id = ~VARPSU,
strata = ~VARSTR,
weights = ~PERWT14F,
data = meps,
nest = TRUE)
# Run analysis
svytotal(~(TOTEXP14>0), design = mepsdsgn)
AHRQ Home
MEPS Household Component Summary Tables
Trends over time
Cross-sectional data
Select Data
Select statistic to view:
Group by:
Customize Subgroups
Table
Plot
Code
Download table
session/0dfccb9e618d75013820447c21b213da/download/trend-file_download?w=
# Install and load packages
package_names <- c('survey','dplyr','foreign')
lapply(package_names, function(x) if(!x %in% installed.packages()) install.packages(x))
lapply(package_names, require, character.only=T)
options(survey.lonely.psu='adjust')
options(digits = 10)
# Load meps data from SAS transport files
year <- 2014
FYC <- read.xport('C:/MEPS/h171.ssp')
if(year <= 2001) FYC <- FYC %>% rename(VARPSU = VARPSU14,VARSTR=VARSTR14)
if(year <= 1998) FYC <- FYC %>% rename(PERWT14F = WTDPER14)
# Define survey design
meps <- FYC %>% mutate(ind = 1)
mepsdsgn <- svydesign(
id = ~VARPSU,
strata = ~VARSTR,
weights = ~PERWT14F,
data = meps,
nest = TRUE)
# Run analysis
svytotal(~(TOTEXP14>0), design = mepsdsgn)
About the Data
The MEPS Household Component fields questionnaires to individual household members to collect nationally representative data on demographic characteristics, health conditions, health status, use of medical care services, charges and payments, access to care, satisfaction with care, health insurance coverage, income, and employment. The population represented in the tables and figures includes all members of the U.S. civilian non-institutionalized population.
Source
Center for Financing, Access and Cost Trends, Agency for Healthcare Research and Quality, Medical Expenditure Panel Survey, 1996-2014.
Suggested Citation
Agency for Healthcare Research and Quality. Number of people (in millions), United States, 1996-2014. Medical Expenditure Panel Survey Household Component. Generated interactively. (March 10, 2017).
Note to User
This tool is provided as a convenience and is still in beta testing. It is the responsibibility of the user to review results for statistical significance and overall reasonableness.
# Install and load packages
package_names <- c('survey','dplyr','foreign')
lapply(package_names, function(x) if(!x %in% installed.packages()) install.packages(x))
lapply(package_names, require, character.only=T)
options(survey.lonely.psu='adjust')
options(digits = 10)
# Load meps data from SAS transport files
year <- 2014
FYC <- read.xport('C:/MEPS/h171.ssp')
if(year <= 2001) FYC <- FYC %>% rename(VARPSU = VARPSU14,VARSTR=VARSTR14)
if(year <= 1998) FYC <- FYC %>% rename(PERWT14F = WTDPER14)
# Define survey design
meps <- FYC %>% mutate(ind = 1)
mepsdsgn <- svydesign(
id = ~VARPSU,
strata = ~VARSTR,
weights = ~PERWT14F,
data = meps,
nest = TRUE)
# Run analysis
svytotal(~ind, design = mepsdsgn)
# Install and load packages
package_names <- c('survey','dplyr','foreign')
lapply(package_names, function(x) if(!x %in% installed.packages()) install.packages(x))
lapply(package_names, require, character.only=T)
options(survey.lonely.psu='adjust')
options(digits = 10)
# Load meps data from SAS transport files
year <- 2014
FYC <- read.xport('C:/MEPS/h171.ssp')
if(year <= 2001) FYC <- FYC %>% rename(VARPSU = VARPSU14,VARSTR=VARSTR14)
if(year <= 1998) FYC <- FYC %>% rename(PERWT14F = WTDPER14)
# Define survey design
meps <- FYC %>% mutate(ind = 1)
mepsdsgn <- svydesign(
id = ~VARPSU,
strata = ~VARSTR,
weights = ~PERWT14F,
data = meps,
nest = TRUE)
# Run analysis
svymean(~ind, design = mepsdsgn)
# Install and load packages
package_names <- c('survey','dplyr','foreign')
lapply(package_names, function(x) if(!x %in% installed.packages()) install.packages(x))
lapply(package_names, require, character.only=T)
options(survey.lonely.psu='adjust')
options(digits = 10)
# Load meps data from SAS transport files
year <- 2014
FYC <- read.xport('C:/MEPS/h171.ssp')
if(year <= 2001) FYC <- FYC %>% rename(VARPSU = VARPSU14,VARSTR=VARSTR14)
if(year <= 1998) FYC <- FYC %>% rename(PERWT14F = WTDPER14)
# Define survey design
meps <- FYC %>% mutate(ind = 1)
mepsdsgn <- svydesign(
id = ~VARPSU,
strata = ~VARSTR,
weights = ~PERWT14F,
data = meps,
nest = TRUE)
# Run analysis
svymean(~(TOTEXP14>0), design = mepsdsgn)
svytotal(~TOTEXP14, design = mepsdsgn)
svymean(~TOTEXP14, design = mepsdsgn)
svymean(~TOTEXP14, design = subset(mepsdsgn,TOTEXP14>0))
svyquantile(~TOTEXP14,design = subset(mepsdsgn,TOTEXP14>0),quantiles=c(0.5),ci=T)
# Install and load packages
package_names <- c('survey','dplyr','foreign')
lapply(package_names, function(x) if(!x %in% installed.packages()) install.packages(x))
lapply(package_names, require, character.only=T)
options(survey.lonely.psu='adjust')
options(digits = 10)
# Load meps data from SAS transport files
year <- 2014
FYC <- read.xport('C:/MEPS/h171.ssp')
if(year <= 2001) FYC <- FYC %>% rename(VARPSU = VARPSU14,VARSTR=VARSTR14)
if(year <= 1998) FYC <- FYC %>% rename(PERWT14F = WTDPER14)
# Define subgroups
FYC <- FYC %>%
mutate(sex = recode_factor(SEX,'1' = 'Male','2' = 'Female'))
# Define survey design
meps <- FYC %>% mutate(ind = 1)
mepsdsgn <- svydesign(
id = ~VARPSU,
strata = ~VARSTR,
weights = ~PERWT14F,
data = meps,
nest = TRUE)
# Run analysis
svyby(~ind, by = ~sex, FUN = svytotal, design = mepsdsgn)
svyby(~(TOTEXP14>0), by = ~sex, FUN = svymean, design = mepsdsgn)
svyby(~TOTEXP14, by = ~sex, FUN = svytotal, design = mepsdsgn)
svyby(~TOTEXP14, by = ~sex, FUN = svymean, design = mepsdsgn)
svyby(~TOTEXP14, by = ~sex, FUN = svymean, design = subset(mepsdsgn,TOTEXP14>0))
svyby(~TOTEXP14, by = ~sex, FUN = svymean, design = subset(mepsdsgn,TOTEXP14>0))
svyby(~TOTEXP14, by = ~sex, FUN = svymean, design = subset(mepsdsgn,TOTEXP14>0))
# Install and load packages
package_names <- c('survey','dplyr','foreign')
lapply(package_names, function(x) if(!x %in% installed.packages()) install.packages(x))
lapply(package_names, require, character.only=T)
options(survey.lonely.psu='adjust')
options(digits = 10)
# Load meps data from SAS transport files
year <- 2014
FYC <- read.xport('C:/MEPS/h171.ssp')
if(year <= 2001) FYC <- FYC %>% rename(VARPSU = VARPSU14,VARSTR=VARSTR14)
if(year <= 1998) FYC <- FYC %>% rename(PERWT14F = WTDPER14)
# Define subgroups
FYC <- FYC %>%
mutate(sex = recode_factor(SEX,'1' = 'Male','2' = 'Female'))
# Define survey design
FYC <- FYC %>%
group_by(sex) %>%
mutate(n_with_expense = sum([EXP]*PERWT14F > 0))
meps <- FYC %>% mutate(ind = 1)
mepsdsgn <- svydesign(
id = ~VARPSU,
strata = ~VARSTR,
weights = ~PERWT14F,
data = meps,
nest = TRUE)
# Run analysis
svyby(~TOTEXP14, by = ~sex, FUN = svyquantile, design = subset(mepsdsgn,TOTEXP14>0 & n_with_expense>1), quantiles=c(0.5), ci=T)
# Define subgroups
FYC <- FYC %>%
mutate(sex = recode_factor(SEX,'1' = 'Male','2' = 'Female'))
# Define survey design
meps <- FYC %>% mutate(ind = 1)
mepsdsgn <- svydesign(
id = ~VARPSU,
strata = ~VARSTR,
weights = ~PERWT14F,
data = meps,
nest = TRUE)
# Run analysis
svyby(~TOTEXP14, by = ~sex, FUN = svyquantile, design = subset(mepsdsgn,TOTEXP14>0 & n_with_expense>1), quantiles=c(0.5), ci=T)
library(devtools)
install_github("ajdamico/lodown")
library(lodown)
meps_cat <- get_catalog( "meps" , output_dir = "C:/My Directory/MEPS" )
library(lodown)
install.packages('lodown')
install_github("ajdamico/lodown")
install.packages('digest')
install.packages("digest")
library(lodown)
install_github("ajdamico/lodown")
library(devtools)
library(devtools)
library(digest)
install.packages('digest')
library(digest)
remove.packages('digest')
install.packages('digest')
.libPaths()
shiny::runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/combined_hc_tables')
2.7/300
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
shiny::runApp()
subgrp_list
subgrp_list %>% unlist
runApp('C:/Users/emily.mitchell/Desktop/Programming/GitHub/meps_summary_tables/household_component/expenditures_per_person')
chkbox_list
names(chkbox_list)
chkbox_list[[grp]]
subgrp_list %>% unlist
(subgrp_list %>% unlist)
names(chkbox_list)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?observe
?observeEvent
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
subgrp_list
subgrp_dictionary
subgrp_labels
subgrp_list
subgrp_list %>% setNames(NULL)
subgrp_list %>% setNames(NULL) %>%unlist
subgrp_list %>% setNames(NULL) %>%unlist %>% invertList
subgrp_labels <- subgrp_list %>% setNames(NULL) %>%unlist %>% invertList #%>% gsub("Demographics.","",.)
subgrp_labels["Year"]="Year"
subgrp_labels
runApp()
runApp()
runApp()
help("updateCheckboxGroupInput")
updateCheckboxGroupInput
runApp()
runApp()
runApp()
runApp()
runApp()
updateCheckboxGroupInput()
updateCheckboxGroupInput
updateInputOptions
shiny:::updateinputoptions
shiny:::updateInputOptions
choicesWithNames
validateSelected
runApp()
updateCheckboxGroupInput
updateInputOptions
runApp()
shiny:::updateInputOptions
runApp()
runApp()
runApp()
shiny:::dropNulls
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
options(shiny.reactlog=T)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rm(list=ls())
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
grps = c("fruits","vegetables","animals")
levels = list("fruits"     = c("apples","bananas","clementines"),
"vegetables" = c("lettuce","kale","carrots"),
"animals"    = c("zebra","aardvark","centipede"))
levels
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
levels["fruits"]
levels["fruits"] %>% c
levels["fruits"] %>% unlist
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp()
runApp()
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
help(req)
updateCheckboxGroupInput
updateInputOptions
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
runApp('C:/Users/emily.mitchell/Desktop/test_checkbox')
library(shiny)
letters = c('A','B','C','D','E','F','G','H','I','J','K','L')
words = list( "A" = c("apples","aardvark","alabama"),
"B" = c("banana","baltimore","beehive"),
"C" = c("catastrophe","cantalope"),
"D" = c("dinosaur","dairy","dolphin"),
"E" = c("eager","elephant","ecumenical"),
"F" = c("fleming","florida","flight"),
"G" = c("gator","greater","gait"),
"H" = c("HI"),
"I" = c("igloo","ignominious","interesting"),
"J" = c("jogging","jumpsuit"),
"K" = c("kellog","kangaroo"),
"L" = c("lemon","lime","lemonjello"))
ui <- fluidPage(
selectInput("letter","Choose Letter",choices=letters,selectize=F),
# Initiate check box group
checkboxGroupInput('words_by_letter',label='Select Your Favorite Words',choices = c(1))
)
server <- function(input, output, session) {
v_selected <- reactiveValues(
"A" = c("apples","aardvark","alabama"),
"B" = c("banana","baltimore","beehive"),
"C" = c("catastrophe","cantalope"),
"D" = c("dinosaur","dairy","dolphin"),
"E" = c("eager","elephant","ecumenical"),
"F" = c("fleming","florida","flight"),
"G" = c("gator","greater","gait"),
"H" = c("HI"),
"I" = c("igloo","ignominious","interesting"),
"J" = c("jogging","jumpsuit"),
"K" = c("kellog","kangaroo"),
"L" = c("lemon","lime","lemonjello"))
observeEvent(input$letter,{
updateCheckboxGroupInput(session,
inputId  = "words_by_letter",
choices  = words[[input$letter]],
selected = v_selected[[input$letter]])
})
observeEvent(input$words_by_letter,{
v_selected[[input$letter]] = input$words_by_letter
})
}
shinyApp(ui = ui, server = server)
/
for(i in 1:8){
dir.create(paste0("exercise_",i))
}
setwd("C:/Users/emily.mitchell/Desktop/Programming/GitHub/hhs_ahrq/MEPS/SAS")
for(i in 1:8){
dir.create(paste0("exercise_",i))
}
?mv
setwd("C:/Users/emily.mitchell/Desktop/Programming/GitHub/hhs_ahrq/MEPS/Stat")
for(i in 1:8){
dir.create(paste0("exercise_",i))
}
setwd("C:/Users/emily.mitchell/Desktop/Programming/GitHub/hhs_ahrq/MEPS/Stata")
for(i in 1:8){
dir.create(paste0("exercise_",i))
}
